apply plugin: 'jacoco'
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

project.archivesBaseName = 'widget-core'

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0 rc2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 100
        versionName "1.0.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    jacoco {
        //bug in code coverage with espresso 2.1:
        //https://code.google.com/p/android/issues/detail?id=170607
        version jacocoVersion
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:support-annotations:22.2.0'
}

sonarRunner {
    sonarProperties {
        properties["sonar.sources"] = android.sourceSets.main.java.srcDirs
        properties["sonar.binaries"] = file("build/intermediates/classes/debug")
    }
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mdkArtifactoryRepoReleases) {
                authentication(userName: mdkArtifactoryUsername, password: mdkArtifactoryPassword)
            }
            snapshotRepository(url: mdkArtifactoryRepoSnapshots) {
                authentication(userName: mdkArtifactoryUsername, password: mdkArtifactoryPassword)
            }
        }
    }
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    //if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
    //    return; // Skip debug builds.
    //}
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}
