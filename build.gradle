// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
    	jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'

        // spoon uses a different version of guava than espresso
        //see: https://github.com/stanfy/spoon-gradle-plugin/issues/33
        classpath ('com.stanfy.spoon:spoon-gradle-plugin:1.0.2') {
            exclude module: 'guava'
        }
        classpath 'com.google.guava:guava:17.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

apply plugin: 'sonar-runner'
apply plugin: 'license'

// Load dependencies
apply from: 'dependencies.gradle'

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

allprojects {

    repositories {
        mavenLocal()

        maven {
            url mdkArtifactoryRepoReleases
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
        maven {
            url mdkArtifactoryRepoSnapshots
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
    	jcenter()
    }

    group = 'com.soprasteria.movalysmdk.widget'
    version = '1.0.0-BETA3'

    ext {
        androidBuildToolsVersion = "23.0.0 rc3"
        androidMinSdkVersion = 14
        androidTargetSdkVersion = 22
        androidCompileSdkVersion = 22

        androidVersionCode = 100
        androidVersionName = "1.0.0"
    }
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://sonar.ntes.fr.sopra"
        property "sonar.jdbc.url", "jdbc:mysql://sonar.ntes.fr.sopra:3306/sonar?useUnicode=true&amp;characterEncoding=utf8"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
        property "sonar.language", "java"
        property "sonar.profile", "MDK Way with Findbugs Android Lint"
    }
}

license {
    strictCheck true
    //exclude "**/*.properties"
    //excludes(["**/*.txt", "**/*.conf"])
    //include "**/*.groovy"
    //includes(["**/*.java", "**/*.properties"])
}

// compilation options
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.deprecation = true
    options.debug = true
}

task mdkLicenseFormat (type:nl.javadude.gradle.plugins.license.License) {
    source = [
        fileTree(dir:"core/src/main/java").include("**/*.java"),
        fileTree(dir:"core/src/main/res").include("**/*.xml"),
        fileTree(dir:"core/src/main").include("AndroidManifest.xml"),
        fileTree(dir:"basic/src/main/java").include("**/*.java"),
        fileTree(dir:"basic/src/main/res").include("**/*.xml"),
        fileTree(dir:"basic/src/main").include("AndroidManifest.xml"),
        fileTree(dir:"sample/src/main/java").include("**/*.java"),
        fileTree(dir:"sample/src/main/res").include("**/*.xml"),
        fileTree(dir:"sample/src/main").include("AndroidManifest.xml"),
        fileTree(dir:"sample/src/androidTest/java").include("**/*.java")
    ]
}

// Run ./gradlew licenseFormat
licenseFormat.dependsOn mdkLicenseFormat
clean.dependsOn licenseFormat

