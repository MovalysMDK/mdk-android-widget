// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
    	jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0-beta2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'

        // spoon uses a different version of guava than espresso
        //see: https://github.com/stanfy/spoon-gradle-plugin/issues/33
        classpath ('com.stanfy.spoon:spoon-gradle-plugin:1.0.2') {
            exclude module: 'guava'
        }
        classpath 'com.google.guava:guava:17.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.1.2'
}


def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

allprojects {

    apply plugin: 'net.researchgate.release'

    repositories {
        mavenLocal()

        maven {
            url mdkArtifactoryRepoReleases
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
        maven {
            url mdkArtifactoryRepoSnapshots
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
    	jcenter()
    }

    group = 'com.soprasteria.movalysmdk.widget'

    release {
        failOnUpdateNeeded = false
    }

    ext {

        // compilation with java 1.7
        projectSourceCompatibility = JavaVersion.VERSION_1_7
        projectTargetCompatibility = JavaVersion.VERSION_1_7

        // library versions
        appcompatv7Version = "22.2.0"
        appcompatv4Version = "22.2.0"
        supportAnnotationVersion = "22.2.0"
        supportTestEspressoVersion = "2.2"
        supportTestRunnerVersion = "0.3"

        spoonClientVersion = "1.1.9"
    }
}

subprojects {

    afterEvaluate { Project project ->

        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: mdkArtifactoryRepoReleases) {
                        authentication(userName: mdkArtifactoryUsername, password: mdkArtifactoryPassword)
                    }
                    snapshotRepository(url: mdkArtifactoryRepoSnapshots) {
                        authentication(userName: mdkArtifactoryUsername, password: mdkArtifactoryPassword)
                    }
                }
            }
        }

        afterReleaseBuild.dependsOn uploadArchives
    }
}

apply plugin: 'sonar-runner'

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://sonar.ntes.fr.sopra"
        property "sonar.jdbc.url", "jdbc:mysql://sonar.ntes.fr.sopra:3306/sonar?useUnicode=true&amp;characterEncoding=utf8"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"
        property "sonar.language", "java"
	    property "sonar.profile", "Sonar way with Findbugs Android Lint"
    }
}

// compilation options
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.deprecation = true
    options.debug = true
}
